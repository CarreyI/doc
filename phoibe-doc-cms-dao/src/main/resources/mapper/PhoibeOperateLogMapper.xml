<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.phoibe.doc.cms.dao.PhoibeOperateLogMapper">
  <resultMap id="BaseResultMap" type="me.phoibe.doc.cms.domain.po.PhoibeOperateLog">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="LOG_TYPE" jdbcType="DECIMAL" property="logType" />
    <result column="DOCUMENT_ID" jdbcType="DECIMAL" property="documentId" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, LOG_TYPE, DOCUMENT_ID, CONTENT, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PHOIBE_OPERATE_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from PHOIBE_OPERATE_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="me.phoibe.doc.cms.domain.po.PhoibeOperateLog">
    insert into PHOIBE_OPERATE_LOG (ID, USER_ID, LOG_TYPE, 
      DOCUMENT_ID, CONTENT, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, #{logType,jdbcType=DECIMAL}, 
      #{documentId,jdbcType=DECIMAL}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="me.phoibe.doc.cms.domain.po.PhoibeOperateLog">
    insert into PHOIBE_OPERATE_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="logType != null">
        LOG_TYPE,
      </if>
      <if test="documentId != null">
        DOCUMENT_ID,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=DECIMAL},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.phoibe.doc.cms.domain.po.PhoibeOperateLog">
    update PHOIBE_OPERATE_LOG
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="logType != null">
        LOG_TYPE = #{logType,jdbcType=DECIMAL},
      </if>
      <if test="documentId != null">
        DOCUMENT_ID = #{documentId,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.phoibe.doc.cms.domain.po.PhoibeOperateLog">
    update PHOIBE_OPERATE_LOG
    set USER_ID = #{userId,jdbcType=DECIMAL},
      LOG_TYPE = #{logType,jdbcType=DECIMAL},
      DOCUMENT_ID = #{documentId,jdbcType=DECIMAL},
      CONTENT = #{content,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>